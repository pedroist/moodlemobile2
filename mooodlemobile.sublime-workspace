{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"load",
				"loadLocal"
			],
			[
				"getAttempT",
				"getAttemptSummaryCacheKey"
			],
			[
				"itemI",
				"itemId"
			],
			[
				"stri",
				"stringify"
			],
			[
				"text",
				"textarea"
			],
			[
				"question",
				"questionEl"
			],
			[
				"item",
				"itemId"
			],
			[
				"mm",
				"mmUtil"
			],
			[
				"file",
				"fileuploader"
			],
			[
				"v",
				"value"
			],
			[
				"check",
				"checkChanges"
			],
			[
				"attach",
				"attachments"
			],
			[
				"getqUES",
				"getQuestionAttachmentsFromHtml"
			],
			[
				"getQu",
				"getQuestionAttachmentsFromHtml"
			],
			[
				"online",
				"onlineObserver"
			],
			[
				"expand",
				"expandDescription"
			],
			[
				"attempt",
				"attemptQuiz"
			],
			[
				"open",
				"openQuiz"
			],
			[
				"refres",
				"refreshData"
			],
			[
				"finish",
				"finishSync"
			],
			[
				"syncQ",
				"syncQuiz"
			],
			[
				"syncQui",
				"syncQuizIfNeeded"
			],
			[
				"has",
				"hasDataToSync"
			],
			[
				"should",
				"shouldShowTimeLeft"
			],
			[
				"process",
				"processOfflineAttempt"
			],
			[
				"PROCE",
				"processAttempt"
			],
			[
				"LOG",
				"logViewQuiz"
			],
			[
				"logViewA",
				"logViewAttemptSummary"
			],
			[
				"logView",
				"logViewAttemptReview"
			],
			[
				"isAttemp",
				"isAttemptTimeNearlyOver"
			],
			[
				"invalidateUserBes",
				"invalidateUserBestGradeForUser"
			],
			[
				"invalidateUserAttempts",
				"invalidateUserAttemptsForUser"
			],
			[
				"invalidateCombin",
				"invalidateCombinedReviewOptionsForUser"
			],
			[
				"invalidateAttemptR",
				"invalidateAttemptReviewForPage"
			],
			[
				"invalidateAttemptData",
				"invalidateAttemptDataForPage"
			],
			[
				"invalidateAttemptAcc",
				"invalidateAttemptAccessInformationForAttempt"
			],
			[
				"getUserBe",
				"getUserBestGrade"
			],
			[
				"getUserBest",
				"getUserBestGradeCommonCacheKey"
			],
			[
				"getUserBestGrade",
				"getUserBestGradeCacheKey"
			],
			[
				"getUser",
				"getUserAttemptsCacheKey"
			],
			[
				"getPagesFromLayou",
				"getPagesFromLayoutAndQuestions"
			],
			[
				"getQuizRe",
				"getQuizRequiredQtypesCacheKey"
			],
			[
				"getQuizA",
				"getQuizAccessInformationCacheKey"
			],
			[
				"getQuiz",
				"getQuizById"
			],
			[
				"getGrade",
				"getGradeFromGradebookCacheKey"
			],
			[
				"getFeed",
				"getFeedbackForGrade"
			],
			[
				"getCombine",
				"getCombinedReviewOptionsCommonCacheKey"
			],
			[
				"getCombin",
				"getCombinedReviewOptionsCacheKey"
			],
			[
				"getAttemptSu",
				"getAttemptSummaryCacheKey"
			],
			[
				"getAttemptRe",
				"getAttemptReadableStateName"
			],
			[
				"getAttempte",
				"getAttemptReadableState"
			],
			[
				"getAttemptDue",
				"getAttemptDueDateWarning"
			],
			[
				"getAttempt",
				"getAttemptDueDate"
			],
			[
				"forma",
				"formatGrade"
			],
			[
				"show",
				"showError"
			],
			[
				"loa",
				"loadToc"
			],
			[
				"ref",
				"refreshAttempt"
			],
			[
				"refre",
				"refreshData"
			],
			[
				"time",
				"timeUp"
			],
			[
				"beha",
				"behaviourButtonClicked"
			],
			[
				"scroll",
				"scrollToQuestion"
			],
			[
				"init",
				"initTimer"
			],
			[
				"finis",
				"finishAttempt"
			],
			[
				"leave",
				"leavePlayer"
			],
			[
				"json",
				"json_encode"
			]
		]
	},
	"buffers":
	[
		{
			"file": "www/addons/qtype/essay/directive.js",
			"settings":
			{
				"buffer_size": 4756,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/qtype/essay/handlers.js",
			"settings":
			{
				"buffer_size": 4767,
				"line_ending": "Windows"
			}
		},
		{
			"file": "platforms/android/assets/www/core/components/question/services/helper.js",
			"settings":
			{
				"buffer_size": 38727,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/qtype/essay/template.html",
			"settings":
			{
				"buffer_size": 3007,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/photouploader/directives/onchange.js",
			"settings":
			{
				"buffer_size": 1166,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/photouploader/services/helper.js",
			"settings":
			{
				"buffer_size": 23905,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/photouploader/services/photouploader.js",
			"settings":
			{
				"buffer_size": 7083,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/lib/sitesmanager.js",
			"settings":
			{
				"buffer_size": 33985,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/lib/sitesfactory.js",
			"settings":
			{
				"buffer_size": 48349,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "platforms/android/assets/www/core/lib/ws.js",
			"settings":
			{
				"buffer_size": 27395,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/fileuploader/controllers/picker.js",
			"settings":
			{
				"buffer_size": 7070,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/mod/quiz/controllers/player.js",
			"settings":
			{
				"buffer_size": 20521,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/mod/quiz/services/quiz.js",
			"settings":
			{
				"buffer_size": 92890,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/question/services/helper.js",
			"settings":
			{
				"buffer_size": 38727,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "platforms/android/assets/www/addons/mod/quiz/services/quiz.js",
			"settings":
			{
				"buffer_size": 92890,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/mod/quiz/services/quiz_online.js",
			"settings":
			{
				"buffer_size": 4465,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/mod/quiz/accessrules/offlineattempts/handlers.js",
			"settings":
			{
				"buffer_size": 3287,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/addons/mod/quiz/accessrules/offlineattempts/directive.js",
			"settings":
			{
				"buffer_size": 1010,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nangular.module('mm.addons.mod_quiz')\n.constant('mmaModQuizAttemptsStore', 'mod_quiz_attempts')\n\n.config(function($mmSitesFactoryProvider, mmaModQuizAttemptsStore) {\n    var stores = [\n        {\n            name: mmaModQuizAttemptsStore,\n            keyPath: 'id',\n            indexes: [\n                {\n                    name: 'attempt' // Attempt number.\n                },\n                {\n                    name: 'userid'\n                },\n                {\n                    name: 'quizid'\n                },\n                {\n                    name: 'courseid'\n                },\n                {\n                    name: 'timemodified'\n                },\n                {\n                    name: 'finished'\n                },\n                {\n                    // Not using compound indexes because they seem to have issues with where().\n                    name: 'quizAndUser',\n                    generator: function(obj) {\n                        return [obj.quizid, obj.userid];\n                    }\n                }\n            ]\n        }\n    ];\n    $mmSitesFactoryProvider.registerStores(stores);\n})\n\n/**\n * Quiz offline service.\n *\n * @module mm.addons.mod_quiz\n * @ngdoc service\n * @name $mmaModQuizOffline\n */\n.factory('$mmaModQuizOffline', function($log, $mmSite, $mmSitesManager, $mmUtil, $q, $mmQuestion, $mmQuestionBehaviourDelegate,\n            $translate, mmaModQuizAttemptsStore, mmaModQuizComponent) {\n\n    $log = $log.getInstance('$mmaModQuizOffline');\n\n    var self = {};\n\n    /**\n     * Classify the answers in questions.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#classifyAnswersInQuestions\n     * @param  {Object} answers List of answers.\n     * @return {Object}         List of questions with answers.\n     */\n    self.classifyAnswersInQuestions = function(answers) {\n        var questionsWithAnswers = {};\n\n        // Classify the answers in each question.\n        angular.forEach(answers, function(value, name) {\n            var slot = $mmQuestion.getQuestionSlotFromName(name),\n                nameWithoutPrefix = $mmQuestion.removeQuestionPrefix(name);\n\n            if (!questionsWithAnswers[slot]) {\n                questionsWithAnswers[slot] = {\n                    answers: {},\n                    prefix: name.substr(0, name.indexOf(nameWithoutPrefix))\n                };\n            }\n            questionsWithAnswers[slot].answers[nameWithoutPrefix] = value;\n        });\n\n        return questionsWithAnswers;\n    };\n\n    /**\n     * Given a list of questions with answers classified in it (@see $mmaModQuizOffline#classifyAnswersInQuestions),\n     * returns a list of answers (including prefix in the name).\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#extractAnswersFromQuestions\n     * @param  {Object} questions Questions.\n     * @return {Object}           Answers.\n     */\n    self.extractAnswersFromQuestions = function(questions) {\n        var answers = {};\n        angular.forEach(questions, function(question) {\n            angular.forEach(question.answers, function(value, name) {\n                answers[question.prefix + name] = value;\n            });\n        });\n        return answers;\n    };\n\n    /**\n     * Get all the offline attempts in a certain site.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#getAllAttempts\n     * @param {String} [siteId] Site ID. If not set, use current site.\n     * @return {Promise}        Promise resolved when the offline attempts are retrieved.\n     */\n    self.getAllAttempts = function(siteId) {\n        siteId = siteId || $mmSite.getId();\n\n        return $mmSitesManager.getSiteDb(siteId).then(function(db) {\n            if (!db) {\n                return $q.reject();\n            }\n\n            return db.getAll(mmaModQuizAttemptsStore);\n        });\n    };\n\n    /**\n     * Retrieve an attempt answers from site DB.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#getAttemptAnswers\n     * @param  {Number} attemptId Attempt ID.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise}          Promise resolved with the answers.\n     */\n    self.getAttemptAnswers = function(attemptId, siteId) {\n        return $mmQuestion.getAttemptAnswers(mmaModQuizComponent, attemptId, siteId);\n    };\n\n    /**\n     * Retrieve an attempt from site DB.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#getAttemptById\n     * @param  {Number} attemptId Attempt ID.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise}          Promise resolved with the attempt.\n     */\n    self.getAttemptById = function(attemptId, siteId) {\n        siteId = siteId || $mmSite.getId();\n\n        return $mmSitesManager.getSite(siteId).then(function(site) {\n            return site.getDb().get(mmaModQuizAttemptsStore, attemptId);\n        });\n    };\n\n    /**\n     * Retrieve an attempt from site DB.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#getQuizAttempts\n     * @param  {Number} attemptId Attempt ID.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @param  {Number} [userId]  User ID. If not defined, user current site's user.\n     * @return {Promise}          Promise resolved with the attempt.\n     */\n    self.getQuizAttempts = function(quizId, siteId, userId) {\n        siteId = siteId || $mmSite.getId();\n\n        return $mmSitesManager.getSite(siteId).then(function(site) {\n            userId = userId || site.getUserId();\n            return site.getDb().whereEqual(mmaModQuizAttemptsStore, 'quizAndUser', [quizId, userId]);\n        });\n    };\n\n    /**\n     * Load local state in the questions.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#loadQuestionsLocalStates\n     * @param  {Number} attemptId   Attempt ID.\n     * @param  {Object[]} questions Questions.\n     * @param  {String} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise}            Promise resolved when done.\n     */\n    self.loadQuestionsLocalStates = function(attemptId, questions, siteId) {\n        var promises = [];\n        angular.forEach(questions, function(question) {\n            promises.push($mmQuestion.getQuestion(mmaModQuizComponent, attemptId, question.slot, siteId).then(function(q) {\n                var state = $mmQuestion.getState(q.state);\n                question.state = q.state;\n                question.status = $translate.instant('mm.question.' + state.status);\n            }).catch(function() {\n                // Question not found.\n            }));\n        });\n        return $q.all(promises).then(function() {\n            return questions;\n        });\n    };\n\n    /**\n     * Process an attempt, saving its data.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#processAttempt\n     * @param  {Object} quiz          Quiz.\n     * @param  {Object} attempt       Attempt.\n     * @param  {Object} questions     Questions of the quiz. Keys should be question numbers.\n     * @param  {Object} data          Data to save.\n     * @param  {Boolean} finish       True to finish the quiz, false otherwise.\n     * @param  {String} [siteId]      Site ID. If not defined, current site.\n     * @return {Promise}              Promise resolved in success, rejected otherwise.\n     */\n    self.processAttempt = function(quiz, attempt, questions, data, finish, siteId) {\n        siteId = siteId || $mmSite.getId();\n\n        var now = $mmUtil.timestamp(),\n            db;\n\n        return $mmSitesManager.getSite(siteId).then(function(site) {\n            db = site.getDb();\n\n            // Check if an attempt already exists.\n            return self.getAttemptById(attempt.id, siteId).catch(function() {\n                // Attempt doesn't exist, create a new entry.\n                return {\n                    quizid: quiz.id,\n                    userid: attempt.userid,\n                    id: attempt.id,\n                    courseid: quiz.course,\n                    timecreated: now,\n                    attempt: attempt.attempt,\n                    currentpage: attempt.currentpage\n                };\n            });\n        }).then(function(entry) {\n            // Save attempt in DB.\n            entry.timemodified = now;\n            entry.finished = !!finish;\n\n            return db.insert(mmaModQuizAttemptsStore, entry);\n        }).then(function() {\n            // Attempt has been saved, now we need to save the answers.\n            return self.saveAnswers(quiz, attempt, questions, data, now, siteId);\n        });\n    };\n\n    /**\n     * Remove an attempt and its answers from local DB.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#removeAttemptAndAnswers\n     * @param  {Number} attemptId Attempt ID.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise}          Promise resolved when finished.\n     */\n    self.removeAttemptAndAnswers = function(attemptId, siteId) {\n        siteId = siteId || $mmSite.getId();\n\n        var promises = [];\n\n        // Remove stored answers and questions.\n        promises.push($mmQuestion.removeAttemptAnswers(mmaModQuizComponent, attemptId, siteId));\n        promises.push($mmQuestion.removeAttemptQuestions(mmaModQuizComponent, attemptId, siteId));\n\n        // Remove the attempt.\n        promises.push($mmSitesManager.getSite(siteId).then(function(site) {\n            return site.getDb().remove(mmaModQuizAttemptsStore, attemptId);\n        }));\n\n        return $q.all(promises);\n    };\n\n    /**\n     * Remove a question and its answers from local DB.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#removeQuestionAndAnswers\n     * @param  {Number} attemptId Attempt ID.\n     * @param  {Number} slot      Question slot.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise}          Promise resolved when finished.\n     */\n    self.removeQuestionAndAnswers = function(attemptId, slot, siteId) {\n        siteId = siteId || $mmSite.getId();\n\n        var promises = [];\n\n        promises.push($mmQuestion.removeQuestion(mmaModQuizComponent, attemptId, slot, siteId));\n        promises.push($mmQuestion.removeQuestionAnswers(mmaModQuizComponent, attemptId, slot, siteId));\n\n        return $q.all(promises);\n    };\n\n    /**\n     * Save an attempt's answers and calculate state for questions modified.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#saveAnswers\n     * @param  {Object} quiz      Quiz.\n     * @param  {Object} attempt   Attempt.\n     * @param  {Object} questions Questions of the quiz. Keys should be question slots.\n     * @param  {Object} answers   Answers to save.\n     * @param  {Number} [timemod] Time modified to set in the answers. If not defined, current time.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise}          Promise resolved when done.\n     */\n    self.saveAnswers = function(quiz, attempt, questions, answers, timemod, siteId) {\n        siteId = siteId || $mmSite.getId();\n        timemod = timemod || $mmUtil.timestamp();\n\n        var promises = [],\n            questionsWithAnswers = {},\n            newStates = {};\n\n        // Classify the answers in each question.\n        angular.forEach(answers, function(value, name) {\n            var slot = $mmQuestion.getQuestionSlotFromName(name),\n                nameWithoutPrefix = $mmQuestion.removeQuestionPrefix(name);\n\n            if (questions[slot]) {\n                if (!questionsWithAnswers[slot]) {\n                    questionsWithAnswers[slot] = questions[slot];\n                    questionsWithAnswers[slot].answers = {};\n                }\n                questionsWithAnswers[slot].answers[nameWithoutPrefix] = value;\n            }\n        });\n\n        // First determine the new status of each question. We won't save the new state yet.\n        angular.forEach(questionsWithAnswers, function(question) {\n            promises.push($mmQuestionBehaviourDelegate.determineQuestionState(\n                        quiz.preferredbehaviour, mmaModQuizComponent, attempt.id, question, siteId).then(function(state) {\n                if (state) {\n                    newStates[question.slot] = state.name;\n                }\n            }));\n        });\n\n        return $q.all(promises).then(function() {\n            // Now save the answers.\n            return $mmQuestion.saveAnswers(mmaModQuizComponent, quiz.id, attempt.id, attempt.userid, answers, timemod, siteId);\n        }).then(function() {\n            // Answers have been saved, now we can save the questions with the states.\n            promises = [];\n            angular.forEach(newStates, function(state, slot) {\n                var question = questionsWithAnswers[slot];\n                promises.push(\n                    $mmQuestion.saveQuestion(mmaModQuizComponent, quiz.id, attempt.id, attempt.userid, question, state, siteId)\n                );\n            });\n            return $mmUtil.allPromises(promises).catch(function() {\n                // Ignore errors when saving question state.\n                $log.error('Error saveQuestion');\n            });\n        });\n    };\n\n    /**\n     * Set attempt's current page.\n     *\n     * @module mm.addons.mod_quiz\n     * @ngdoc method\n     * @name $mmaModQuizOffline#setAttemptCurrentPage\n     * @param  {Number} attemptId Attempt ID.\n     * @param  {Number} page      Page to set.\n     * @param  {String} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise}          Promise resolved in success, rejected otherwise.\n     */\n    self.setAttemptCurrentPage = function(attemptId, page, siteId) {\n        siteId = siteId || $mmSite.getId();\n        var entry;\n\n        // Check if an attempt already exists.\n        return self.getAttemptById(attemptId, siteId).then(function(e) {\n            entry = e;\n            return $mmSitesManager.getSite(siteId);\n        }).then(function(site) {\n            // Save attempt in DB.\n            entry.currentpage = page;\n            return site.getDb().insert(mmaModQuizAttemptsStore, entry);\n        });\n    };\n\n    return self;\n});\n",
			"file": "platforms/android/assets/www/addons/mod/quiz/services/quiz_offline.js",
			"file_size": 15504,
			"file_write_time": 131318244909785745,
			"settings":
			{
				"buffer_size": 15096,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/question/services/question.js",
			"settings":
			{
				"buffer_size": 24774,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/question/directives/question.js",
			"settings":
			{
				"buffer_size": 6786,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/core/components/question/templates/question.html",
			"settings":
			{
				"buffer_size": 1601,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Context",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Watch",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Stack",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "=> C:\\Users\\ASUS\\Documents\\GitHub\\moodlemobile2\\www\\addons\\qtype\\essay\\directive.js\n\t|+| 32\n=> C:\\xampp\\htdocs\\moodle\\mod\\quiz\\accessrule\\gps\\rule.php\n\t|+| 65\n=> C:\\xampp\\htdocs\\moodle\\mod\\quiz\\accessrule\\offlineattempts\\rule.php\n\t|+| 109\n",
			"settings":
			{
				"buffer_size": 239,
				"line_ending": "Windows",
				"name": "Xdebug Breakpoint",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 446.0,
		"last_filter": "pac",
		"selected_items":
		[
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"start db",
				"Xdebug: Start Debugging"
			],
			[
				"vmen",
				"View: Toggle Menu"
			],
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 549.0
	},
	"console":
	{
		"height": 162.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/qtype",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/qtype/essay",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/contentlinks",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/contentlinks/services",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photouploader",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photouploader/controllers",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photouploader/directives",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photouploader/services",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/services",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/templates"
	],
	"file_history":
	[
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/platforms/android/assets/www/core/lib/util.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/helper.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/platforms/android/assets/www/core/lib/sitesmanager.js",
		"/C/xampp2/htdocs/moodle/mod/quiz/accessrule/offlineattempts/rule.php",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/autosave.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/services/delegate.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photouploader/controllers/picker.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/qtype/essay/template.html",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/build/mm.bundle.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/quiz_offline.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/platforms/ios/www/core/lib/sitesmanager.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/contentlinks/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/directives/question.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/services/helper.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/ws.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/quiz_online.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/db.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/quiz.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/controllers/review.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/services/question.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/templates/player.html",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/controllers/player.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/sitesfactory.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/controllers/attempt.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/controllers/index.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/init.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/platforms/android/assets/www/core/lib/init.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/qtype/essay/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/qtype/essay/directive.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/qtype/essay/handlers.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/services/helper.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/services/fileuploader.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/controllers/picker.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/directives/onchange.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/services/delegate.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/sharedfiles/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/sidemenu/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/login/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/login/services/helper.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/index.html",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photouploader/services/photouploader.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photoploader/controllers/picker.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photoploader/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/photoploader/directives/onchange.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/login/controllers/init.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/util.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/addonmanager.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/comments/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/config.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/updatemanager.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/app.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/app.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/config.json",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/errorreport.js",
		"/C/xampp2/htdocs/moodle/lib/filestorage/file_storage.php",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/fileuploader/templates/picker.html",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/lib/fs.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/files/controllers/index.js",
		"/C/xampp2/htdocs/moodle/mod/quiz/classes/external.php",
		"/C/xampp2/htdocs/moodle/mod/quiz/attemptlib.php",
		"/C/xampp2/htdocs/moodle/question/engine/questionusage.php",
		"/C/xampp2/htdocs/moodle/question/engine/questionattempt.php",
		"/C/xampp2/htdocs/moodle/question/engine/datalib.php",
		"/C/xampp2/htdocs/moodle/lib/filelib.php",
		"/C/xampp2/htdocs/moodle/lib/moodlelib.php",
		"/C/xampp2/htdocs/moodle/question/type/essay/question.php",
		"/C/xampp2/htdocs/moodle/question/behaviour/behaviourbase.php",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/files/services/helper.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/calendar/services/calendar.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/files/templates/list.html",
		"/C/xampp2/htdocs/moodle/webservice/lib.php",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/ionic/scss/_items.scss",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/platforms/android/assets/www/addons/mod/quiz/controllers/player.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/ydn.db/test/core/index_3_idb_test.html",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/moment/locale/eu.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/ionic/gulpfile.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/ckeditor/plugins/codesnippet/lib/highlight/README.ru.md",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/angular/index.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/lib/ydn.db/test/websql/key_encoding_websql_test.html",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/calendar/controllers/list.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/calendar/main.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/quiz_sync.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/prefetch_handler.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/services/handlers.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/addons/mod/quiz/directives/arrows.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/www/core/components/question/directives/behaviour.js",
		"/C/Users/ASUS/Documents/GitHub/moodlemobile2/mooodlemobile.sublime-project",
		"/C/xampp2/htdocs/moodle/config.php",
		"/C/xampp2/htdocs/moodle/webservice/upload.php",
		"/C/xampp2/htdocs/moodle/question/engine/questionattemptstep.php",
		"/C/xampp2/htdocs/moodle/question/behaviour/manualgraded/behaviour.php",
		"/C/xampp2/htdocs/moodle/question/type/questionbase.php",
		"/C/xampp2/htdocs/moodle/question/engine/bank.php",
		"/C/Users/ASUS/AppData/Roaming/Sublime Text 3/Packages/User/Xdebug.sublime-settings",
		"/C/xampp2/htdocs/rascunho/distancia.php",
		"/C/Users/ASUS/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/ASUS/AppData/Roaming/Sublime Text 3/Packages/User/View In Browser.sublime-settings",
		"/C/xampp/htdocs/moodle/question/engine/questionusage.php",
		"/C/xampp/htdocs/moodle/lib/dml/mysqli_native_moodle_database.php",
		"/C/xampp/htdocs/moodle/lib/dml/moodle_temptables.php",
		"/C/xampp/htdocs/moodle/question/type/essay/question.php",
		"/C/xampp/htdocs/moodle/question/engine/datalib.php",
		"/C/xampp/htdocs/moodle/mod/quiz/attemptlib.php",
		"/C/xampp/htdocs/moodle/question/engine/questionattempt.php",
		"/C/xampp/htdocs/moodle/question/behaviour/manualgraded/behaviour.php",
		"/C/xampp/htdocs/moodle/question/behaviour/behaviourbase.php",
		"/C/xampp/htdocs/moodle/question/engine/questionattemptstep.php",
		"/C/xampp/htdocs/moodle/lib/moodlelib.php",
		"/C/xampp/htdocs/moodle/question/engine/states.php",
		"/C/xampp/htdocs/moodle/lib/setuplib.php",
		"/C/xampp/htdocs/moodle/index.php",
		"/C/xampp/htdocs/moodle/config.php",
		"/C/xampp/htdocs/moodle/question/engine/bank.php",
		"/C/xampp/htdocs/moodle/question/engine/renderer.php",
		"/C/xampp/htdocs/rascunho/distancia.php",
		"/C/xampp/htdocs/rascunho/rascunho.sublime-project",
		"/C/xampp/htdocs/rascunho/rascunho.html",
		"/C/Users/ASUS/AppData/Roaming/Sublime Text 3/Packages/Xdebug Client/Xdebug.sublime-settings",
		"/C/xampp/htdocs/rascunho/teste2.php",
		"/C/xampp/htdocs/rascunho/teste3.php"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			"C:\\Users\\ASUS\\Documents\\GitHub\\moodlemobile2\\www",
			"C:\\Users\\ASUS\\Documents\\GitHub\\moodlemobile2",
			"C:\\Users\\ASUS\\Documents\\GitHub\\moodlemobile2\\www"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"getAttemptSummaryCacheKey",
			"showError(",
			"showError",
			"process",
			"log is not defined",
			"offline",
			"process",
			"mmaModQuizAutoSave",
			"formName",
			"getA",
			"PTCAnswers",
			"formatInput",
			"loadLocalAnswersInHtml",
			"load",
			"getAttemptData",
			"attempt",
			"getAttemptQuestions",
			"getPreventSubmitMessage",
			"questiondelegate",
			"getQuestionSlotFromName",
			"isCompleteResponse",
			"prefix",
			"author",
			"itemid",
			"debug",
			"uploadFil",
			"uploadFile",
			"constructor",
			"$mmContentLinksDelegateProvider",
			"mma-mod_quiz-player-form",
			"provider",
			".provider",
			"provider",
			"getAnswersFromForm",
			"loadLocalAnswer",
			"getAttemptD",
			"load",
			"insertInForm",
			"inserInForm",
			"prepareProcess",
			"file",
			"inject",
			"regis",
			"fileuploader",
			"mmAppInit",
			"injector",
			"mmFileUploaderDelegate",
			"save",
			"finish",
			"load",
			"getAnswersFro",
			"getAnswersFromForm",
			"load",
			"document.createElement(\"input\")",
			"uploadFile",
			"uploadF",
			"querySelector",
			"uniqueArray",
			"injector",
			"mmFsSitesFolder",
			"Math",
			"math",
			"util",
			"item",
			"random",
			"uploadFile",
			"uploadFn",
			"uploadFile",
			"itemid (",
			"itemid(",
			"draftitemid(",
			"draftitemid()",
			"itemid()",
			"itemid",
			"selectAndUploadFile",
			"state",
			"uploadFile",
			"uploadFn",
			"uploadFile",
			"request",
			"loadPa",
			"getAnswers",
			"loadP",
			"saveAns",
			"loadLo",
			"load",
			"handle",
			"checkCh",
			"History",
			"getAnswers",
			"getAnser",
			"document.createElement",
			"getAttemptDa",
			"log",
			"formName",
			"mmaModQuizAutoSave",
			"mma-mod_quiz-player-form",
			"History",
			"PTC",
			"form",
			"item-text-wrap",
			"handler.controller",
			"cache",
			"sav",
			"save",
			"log",
			"$log",
			"mmFileUploaderPickerCtrl",
			"loadPage",
			"getAnswers",
			"mma-qtype-essay",
			"require(",
			"require",
			"ionicHistory",
			"stateP",
			"$ionicHistory",
			"$state.go",
			"mmFileUploaderPickerCtrl",
			"file",
			"$stateProvider.state",
			"mmFileUploaderPickerCtrl",
			"$stateProvider",
			"$stateParams",
			"tryin",
			"upload",
			"fileUploaded",
			"filePickerDeferred",
			"camera"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" $log"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 14,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "www/addons/qtype/essay/directive.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4756,
						"regions":
						{
						},
						"selection":
						[
							[
								4703,
								4703
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1584.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "www/addons/qtype/essay/handlers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4767,
						"regions":
						{
						},
						"selection":
						[
							[
								2660,
								2678
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2191.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "platforms/android/assets/www/core/components/question/services/helper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38727,
						"regions":
						{
						},
						"selection":
						[
							[
								15495,
								15495
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9927.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "www/addons/qtype/essay/template.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3007,
						"regions":
						{
						},
						"selection":
						[
							[
								2138,
								2138
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "www/core/components/photouploader/directives/onchange.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1166,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "www/core/components/photouploader/services/helper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23905,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 72.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "www/core/components/photouploader/services/photouploader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7083,
						"regions":
						{
						},
						"selection":
						[
							[
								2966,
								2966
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 936.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "www/core/lib/sitesmanager.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33985,
						"regions":
						{
						},
						"selection":
						[
							[
								23148,
								23148
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14054.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "www/core/lib/sitesfactory.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48349,
						"regions":
						{
						},
						"selection":
						[
							[
								23164,
								23164
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 14.0,
						"translation.y": 14159.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "platforms/android/assets/www/core/lib/ws.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27395,
						"regions":
						{
						},
						"selection":
						[
							[
								6448,
								6455
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3398.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "www/core/components/fileuploader/controllers/picker.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7070,
						"regions":
						{
						},
						"selection":
						[
							[
								4694,
								4694
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2318.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "www/addons/mod/quiz/controllers/player.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20521,
						"regions":
						{
						},
						"selection":
						[
							[
								11065,
								11065
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5894.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "www/addons/mod/quiz/services/quiz.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 92890,
						"regions":
						{
						},
						"selection":
						[
							[
								6671,
								6680
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 47.0,
						"translation.y": 2774.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "www/core/components/question/services/helper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38727,
						"regions":
						{
						},
						"selection":
						[
							[
								22246,
								22268
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14894.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "platforms/android/assets/www/addons/mod/quiz/services/quiz.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 92890,
						"regions":
						{
						},
						"selection":
						[
							[
								24537,
								24537
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13694.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "www/addons/mod/quiz/services/quiz_online.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4465,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "www/addons/mod/quiz/accessrules/offlineattempts/handlers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3287,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1800.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "www/addons/mod/quiz/accessrules/offlineattempts/directive.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1010,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "platforms/android/assets/www/addons/mod/quiz/services/quiz_offline.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15096,
						"regions":
						{
						},
						"selection":
						[
							[
								8179,
								8179
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7694.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "www/core/components/question/services/question.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24774,
						"regions":
						{
						},
						"selection":
						[
							[
								23085,
								23089
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 14.0,
						"translation.y": 8991.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "www/core/components/question/directives/question.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6786,
						"regions":
						{
						},
						"selection":
						[
							[
								6548,
								6565
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "www/core/components/question/templates/question.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1601,
						"regions":
						{
						},
						"selection":
						[
							[
								5,
								13
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 22,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 23,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 24,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 25,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 239,
						"regions":
						{
						},
						"selection":
						[
							[
								239,
								239
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			0.7,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.xdebug":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "mooodlemobile.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"xdebug":
		{
			"hide_conflict": false,
			"restore_index":
			{
				"17":
				{
					"group": 0,
					"index": 0
				},
				"18":
				{
					"group": 0,
					"index": 2
				},
				"19":
				{
					"group": 0,
					"index": 3
				},
				"20":
				{
					"group": 0,
					"index": 4
				},
				"21":
				{
					"group": 0,
					"index": 5
				},
				"22":
				{
					"group": 0,
					"index": 6
				},
				"23":
				{
					"group": 0,
					"index": 7
				},
				"24":
				{
					"group": 0,
					"index": 8
				},
				"25":
				{
					"group": 0,
					"index": 9
				},
				"26":
				{
					"group": 0,
					"index": 10
				},
				"27":
				{
					"group": 0,
					"index": 11
				},
				"28":
				{
					"group": 0,
					"index": 12
				},
				"29":
				{
					"group": 0,
					"index": 13
				},
				"30":
				{
					"group": 0,
					"index": 14
				},
				"31":
				{
					"group": 0,
					"index": 15
				},
				"32":
				{
					"group": 0,
					"index": 16
				},
				"33":
				{
					"group": 0,
					"index": 17
				},
				"34":
				{
					"group": 1,
					"index": 0
				},
				"35":
				{
					"group": 1,
					"index": 1
				},
				"36":
				{
					"group": 2,
					"index": 0
				},
				"37":
				{
					"group": 2,
					"index": 1
				},
				"38":
				{
					"group": 0,
					"index": 1
				}
			},
			"restore_layout":
			{
				"cells":
				[
					[
						0,
						0,
						2,
						1
					],
					[
						0,
						1,
						1,
						2
					],
					[
						1,
						1,
						2,
						2
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					0.698708010336,
					1.0
				]
			}
		}
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
